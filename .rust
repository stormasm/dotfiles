
alias ttt='rm -fr target'

alias stable='rustup default stable'
alias stableinstall='rustup install stable'
alias nightly='rustup default nightly'
alias nightlyinstall='rustup install nightly'

alias rbin='cd ~/mia/rust/bin'
alias pbin='cd ~/mia/uv/python/bin'
alias pythonbin='cd ~/mia/uv/python/bin'
alias rustbin='cd ~/mia/rust/bin'

alias rback='RUST_BACKTRACE=1'
alias rbackfull='RUST_BACKTRACE=full'

alias sgo='cd ~/j/tmp13/syn'
alias syngo='cd ~/j/tmp13/syn'

### fd tools
#
### Search across all of 'j' for a particular repo
# fd -d 2 syn
alias fdgo='cd ~/j/tmp20/fd'
alias fdfind='fd -d 2'
alias fdlook='fd -d 2'

### Find target directories

alias rfme='fd -I -t=d'
alias rftt='find . -name target'
alias rft='fd -I -t=d target$'

alias rf='rustfmt'

### cargo commands ok

alias ca='cargo'
alias cben='cargo bench'
alias cbench='cargo bench'

alias cca='cargo cache -a'
alias cb='cargo build'
alias cba='cargo build --all-features'
alias cbr='cargo build --release'
alias cbw='cargo build --workspace'

alias cbd='cargo build --features=dataframe'
alias cbdf='cargo build --features=dataframe'
alias cbex='cargo build --features=extra'
alias cbdfex='cargo build --features="dataframe extra"'
alias crdf='cargo run --features=dataframe'

alias cbdb='cargo build --features=database'
alias cbsql='cargo build --features=database'

alias cdoc='cargo doc --no-deps --open'
alias cor='cargo outdated -R'

### cargo expand

alias ce='cargo expand'
alias cee='ce --example'
alias ce0='cee ex00'
alias ce1='cee ex01'
alias ce2='cee ex02'

### cargo run

alias cr='cargo run'
alias crb='cargo run --bin'
alias cre='cargo run --example'
alias crr='cargo run --release'

alias crec='cargo run --example connect 127.0.0.1:8080'

alias ciman='cargo fmt; cargo check; cargo clippy; cargo test --workspace --all-features'
alias ccfcc='cargo fmt; cargo check; cargo clippy'
alias ccl='cargo clean'
alias clip='cargo clippy'
alias cch='cargo check'
alias check='cargo check'
alias cf='cargo fmt'
alias cn='cargo new'

alias cup='cargo update'
alias cv='cargo -V'

### insta
alias cir='cargo insta review'

### rustup
alias rustdoc='rustup doc'
alias rustdoch='rustup doc -h'
alias docrust='rustup doc'

### rust-bio
alias rb='cd ~/j/tmp18/rust-bio'
alias scr='cd ~/j/tmp17/scraper'

### rsq
alias rsq='cd ~/j/tmp17/rsq'
alias rsql='cd ~/j/tmp17/rusqlite'
alias sql='sqlite3'

### parse-camino + dataset

alias ds='cd ~/j/tmp17/dataset/csv'
alias pcamino='cd ~/j/tmp17/parse-camino'
alias pcd='cd ~/j/tmp17/parse-camino-data'

### shakespeare
alias shake='cd ~/j/tmp17/nuproj/shakespeare'

alias fea='cd ~/j/tmp03/features'

### nushell
alias eq='cd ~/j/tmp17/nushell'

### zed
alias zalt='07';

### gpui-examples
alias gpuiac='zalt; cd gpui-action'
alias gpuix2='zalt; cd gpui-examples'
alias gpuiex2='zalt; cd gpui-examples'
alias gpl='zalt; cd gpui-list'
alias gplist='zalt; cd gpui-list'
alias gpuilist='07; cd gpui-component-demo/list'
alias list='07; cd gpui-component-demo/list'
alias calc='zalt; cd gpui-calc'
alias calc2='zalt; cd gpui-calculator'
alias km='zalt; cd gpui-keymap'
alias kal='zalt; cd kallax'
alias kel='zalt; cd kallex'
alias lix='zalt; cd kallix-1.77'
alias op='zalt; cd ownership_post'
alias zno='cd ~/j/tmp08/zednotes'

alias cleank='cd /Users/ma/Library/Application\ Support/org.kallax.kallax; rm kallax.sqlite'
alias cleankal='cd /Users/ma/Library/Application\ Support/org.kallax.kallax; rm kallax.sqlite'

### loungy
alias lou='zalt; cd loungy'
alias lourun='lou; ./target/debug/loungy'


alias zedbuild='git submodule update --init --recursive'
alias buildzed='git submodule update --init --recursive'

alias gpz='git pull https://github.com/zed-industries/zed main'
alias gpzed='git pull https://github.com/zed-industries/zed main'
alias gpcalc='git pull https://github.com/kriskw1999/gpui-calculator main'
alias getzed='gc git@github.com:zed-industries/zed.git'
alias getzedfast='gcfast git@github.com:zed-industries/zed.git'
alias getzedstorm='gc git@github.com:stormasm/zed.git'

alias zc='cd ~/.config/zed'
alias zcfg='cd ~/.config/zed'
alias zconfig='cd ~/.config/zed'
alias zcme='cd ~/mia/dotfiles/config/zed'
alias zcfgme='cd ~/mia/dotfiles/config/zed'
alias zconfigme='cd ~/mia/dotfiles/config/zed'
alias zme='./target/debug/zed &'
alias zmen='./target/debug/zed'
alias zmexa='./target/debug/zedxa &'
alias zmexan='./target/debug/zedxa'

alias zgo='cd ~/j/tmp08/zed'
alias ztmp='cd ~/j/tmp08/zedtmp'
alias zex='cd ~/j/tmp08/zed-examples'

### storybook
alias sbt='cd ~/j/tmp06/storybook'
#alias sbr='sbt; ./target/debug/sb &'
alias sbrun='sbt; ./target/debug/sb &'
alias sb='sbt; cd ./crates/storybook'
alias sbp='sbt; cd ./crates/storybookpicker'

### zed storybook
alias sbg='zgo; cd crates/storybook'
alias sbui='zgo; cd crates/storybook_ui'
alias sbr='zgo; ./target/debug/storybook'

### noed

alias getnoed='gc git@github.com:stormasm/zed-noed.git'
alias noed='06; cd zed-noed'
alias noedme='noed; ./target/debug/Noed &'

### jed
alias getjed='gc git@github.com:stormasm/jed.git'
alias jme='jgo; ./target/debug/Jed &'
alias jgo='zalt; cd jed'

### Jed crates
alias jgoc='jgo; cd crates'
alias jgui='jgo; cd crates/gpui'
alias jgpui='jgo; cd crates/gpui'
alias jui='jgo; cd crates/ui'
alias jwork='jgo; cd crates/workspace'

### Linux Port

alias cblade='cargo build --features=gpui/macos-blade'

### Zed crates

alias zgoc='zgo; cd crates'
alias zass='zgo; cd assets'
alias zcp='zgo; cd crates/command_palette'
alias zcpex='zgo; cd crates/command_palette/examples'
alias zcpx='zgo; cd crates/command_palette/examples'
alias zeded='zgo; cd crates/editor'
alias zext='zgo; cd crates/extension/src'
alias zextui='zgo; cd crates/extensions_ui'
alias zfb='zgo; cd crates/feedback'
alias gpui='zgo; cd crates/gpui'
alias gpuix='gpui; cd examples'
#alias gpuiex='gpui; cd examples'
alias zgui='zgo; cd crates/gpui'
alias zgpui='zgo; cd crates/gpui'
alias zgpuim='zgo; cd crates/gpui_macros'
alias zgpuix='zgo; cd crates/gpui/examples'
alias zgpuiex='zgo; cd crates/gpui/examples'
alias zmac='zgo; cd crates/gpui_macros'
alias zhtml='zgo; cd crates/html_to_markdown/src'
alias zpick='zgo; cd crates/picker/src'
alias zproj='zgo; cd crates/project'
alias zprojp='zgo; cd crates/project_panel'
alias zprojpanel='zgo; cd crates/project_panel'
alias zqab='zgo; cd crates/quick_action_bar/src'
alias zrepl='zgo; cd crates/repl/src'
alias zset='zgo; cd crates/settings/src'
alias rtop='zgo; cd ../runtimed'
alias rttop='zgo; cd ../runtimed'
alias rtd='zgo; cd ../runtimed/runtimed'
alias rtl='zgo; cd ../runtimed/runtimelib/src'
alias rtt='zgo; cd ../runtimed/runt'
alias zui='zgo; cd crates/ui'
alias zwel='04; cd zedwelcome'
alias zw='04; cd zedworkspace'
alias ztab='zgo; cd crates/tab_switcher'
alias zwork='zgo; cd crates/workspace/src'
alias zedzed='zgo; cd crates/zed'
alias zgozed='zgo; cd crates/zed'
alias zzed='zgo; cd crates/zed'
alias zedxa='zgo; cd crates/zedxa'
alias zxa='zgo; cd crates/zedxa'

alias zedconfig='cd ~/.config/zed'

alias melib='cd "/Users/ma/Library"'
alias meap='cd "/Users/ma/Library/Application Support"'
alias meapp='cd "/Users/ma/Library/Application Support"'
alias meas='cd "/Users/ma/Library/Application Support"'
alias zedapp='cd "/Users/ma/Library/Application Support/Zed"'
alias zedlib='cd "/Users/ma/Library/Application Support/Zed"'
alias zedb='cd "/Users/ma/Library/Application Support/Zed/db"'
alias zedlog='cd ~/Library/Logs/Zed'

alias vslog='cd "/Users/ma/Library/Application Support/viewskater/logs"'

alias rgrequestlayout='rg request_layout'
alias rgdiv='rg "\-> Div"'
alias rgintoelement='rg "#\[derive\(IntoElement\)\]"'
alias rgintoelementfor='rg "impl IntoElement for"'

alias rggt='rg gpui::test'

### rust analyzer, tree sitter
alias tsg='cd ~/j/tmp05'
alias rago='tsg; cd rust-analyzer'
alias tstop='cd ~/j/tmp07/tree-sitter'
alias ts='tree-sitter'
alias tsgen='ts generate'
alias tsgenerate='ts generate'
alias tsp='ts parse'
alias tst='ts test'
alias tstest='ts test'

alias tsbash='tsg; cd tree-sitter-bash'
alias tscss='tsg; cd tree-sitter-css'
alias tsex='tsg; cd tree-sitter-examples'
alias tsj='tsg; cd tree-sitter-javascript'
alias tsjson='tsg; cd tree-sitter-json'
alias tsmath='tsg; cd tree-sitter-math'
alias tsn='tsg; cd tree-sitter-nu'
alias tsnu='tsg; cd tree-sitter-nu'
alias tspy='tsg; cd py-tree-sitter'

alias gptsr='git pull https://github.com/tree-sitter/tree-sitter-rust master'
alias tsr='tsg; cd tree-sitter-rust'

alias tstoml='cd ~/j/tmp07/tree-sitter-toml'
alias tsyaml='cd ~/j/tmp07/tree-sitter-yaml'

### pest
alias gram='cd ~/j/tmp07/grammar'
alias pest='cd ~/j/tmp07/pest'
alias pestb='cd ~/j/tmp07/pest_book'
alias pestbook='cd ~/j/tmp07/pest_book'

### reedline
export EDITOR=emacs
alias rl='cd ~/j/tmp17/reedline'
alias cro='cd ~/j/tmp17/crossterm'
alias cross='cd ~/j/tmp17/crossterm'
alias rl15='cd ~/j/tmp15/reedline'
alias rl16='cd ~/j/tmp16/reedline'
alias rl18='cd ~/j/tmp18/reedline'
alias rlg='~/j/tmp17/reedline/target/debug/reedline'
alias rlrun='~/j/tmp17/reedline/target/debug/reedline'
alias rlex='cd ~/j/tmp17/reedline/examples'
alias rls='cd ~/j/tmp17/reedline/src'


alias fix='rg "FIXME: jt"'
alias fixme='rg "FIXME: jt"'
alias rgfdf='rg "feature = \"dataframe\""'

alias mi='cd ~/j/tmp17/miette'
alias req='./target/debug/engine-q'
alias runeq='./target/debug/engine-q'
alias eqcfg='cd /Users/ma/Library/Application\ Support/nushell'
alias nudoc='cd ~/j/tmp17/nudoc'
alias nub='cd ~/j/tmp17/nubranch'
alias com='cd ~/j/tmp17/nushell/crates/nu-command'
alias fil='cd ~/j/tmp17/nushell/crates/nu-command/src/filters'

### rust-notes
alias nuno='cd ~/j/tmp17/nunotes'
alias nunoir='nuno; cd ir'
alias rn='cd ~/j/tmp07/rust-notes'
alias rno='cd ~/j/tmp21/rust-notes'

### python-notes
alias pno='cd ~/j/tmp34/python-notes'
alias pythonotes='cd ~/j/tmp34/python-notes'

### nudev
alias nudev='cd ~/j/tmp17/nudev'

### hyper example echo server testing

alias ech='curl localhost:3000/echo -XPOST -d'
alias echm='curl localhost:3000/mia -XPOST -d'
alias echr='curl localhost:3000/echo/reversed -XPOST -d'

### arrow and parquet and polars

alias pc="rm *.parquet"

alias pol="cd ~/j/tmp13/polars/polars"
alias polt="cd ~/j/tmp13/polars"

alias datafust='cd ~/j/tmp13/arrow-datafusion'
alias datafus='cd ~/j/tmp13/arrow-datafusion/datafusion/core/src'
alias datafusion='cd ~/j/tmp13/arrow-datafusion/datafusion/core/src'
alias par="cd ~/j/tmp13/arrow-rs/parquet"
alias par2="cd ~/j/tmp13/parquet2"
alias part="cd ~/j/tmp13/parquet-testing/data"

alias pola="cd ~/j/tmp13/polars01a"
alias polb="cd ~/j/tmp13/polars01b"
alias polc="cd ~/j/tmp13/polars01c"

alias polm="cd ~/j/tmp13/polars01/polars-core"
alias polme="cd ~/j/tmp13/polars01/polars-core"

alias arex1='cre read_csv --features "prettyprint"'
alias arex2='cre read_csv_infer_schema --features "prettyprint"'
alias arex3='cre read_csv_ui --features "prettyprint"'

alias c2p='cd ~/j/tmp13/csv2par'

alias cmakear1='cmake -DCMAKE_BUILD_TYPE=Debug -DARROW_BUILD_TESTS=ON ..'
alias cmakear2='cmake -DCMAKE_BUILD_TYPE=Debug -DARROW_BUILD_TESTS=ON -DARROW_PARQUET=ON ..'

### serde
alias rgs='rg Serialize'
alias se='cd ~/j/tmp13/serde'
alias sex='cd ~/j/tmp13/serde-examples'
alias sexr='cd ~/j/tmp13/serde-examples/ron'
alias sj='cd ~/j/tmp13/serde-json'
alias xxrmp='cd ~/j/tmp13/msgpack-rust'
alias ron='cd ~/j/tmp13/ron'
alias xxsm='cd ~/j/tmp13/msgpack-rust/rmp-serde'
alias sy='cd ~/j/tmp13/serde-yaml'

### canop/whalespotter.git
alias ws='whalespotter'

### gyscos/cursive
### go to the examples directory and add the example name
alias cce='cr --features cursive/crossterm-backend --bin'

#
## rust logging
#

# Module declarations take comma separated entries formatted like
# path::to::module=log_level.

# Run the test application as follows:
# RUST_LOG="warn,test::foo=info,test::foo::bar=debug" ./test

# Sets the default log::Level to warn, module foo and module foo::bar to info and debug.
# RUST_LOG="warn,test::foo=info,test::foo::bar=debug" ./test

## export RUST_LOG=openraft::engine::engine_impl=info
## export RUST_LOG=logutil=trace,metastore=trace,sqlexec=trace
## export RUST_LOG=zed=debug
## export RUST_LOG=viewskater=debug
export RUST_LOG=emulsion=debug

alias cklog='env | grep RUST_LOG'
alias loglevel='env | grep RUST_LOG'

alias loge='export RUST_LOG=error'
alias logw='export RUST_LOG=warn'
alias logi='export RUST_LOG=info'
alias logd='export RUST_LOG=debug'
alias logt='export RUST_LOG=trace'

#
### nushell
#

### Releases
alias r84='cd ~/j/tmp18/release-84/nushell'

### miette
alias miup='cargo update --workspace -p miette'

alias gcnu='gc git@github.com:nushell/nushell.git'
alias getnu='gc git@github.com:nushell/nushell.git'
alias getnustorm='gc git@github.com:stormasm/nushell.git'

alias getnubook='gc git@github.com:stormasm/nushell.github.io.git'

alias getnusn='gc git@github.com:stormasm/nu_scripts.git'
alias getnurl='gc git@github.com:nushell/reedline.git'

alias getnupm='gc git@github.com:stormasm/nupm.git'
alias getnugm='gc git@github.com:stormasm/nu-git-manager.git'

alias gpbook='git pull https://github.com/nushell/nushell.github.io main'
alias gpeq='git pull https://github.com/nushell/nushell main'
alias gpor='git pull https://github.com/datafuselabs/openraft main'
alias gpnu='git pull https://github.com/nushell/nushell main'
alias gpnus='git pull https://github.com/nushell/nu_scripts main'
alias gpnusn='git pull https://github.com/nushell/nu_scripts main'
alias gprl='git pull https://github.com/nushell/reedline main'
alias gpgram='git pull https://github.com/nushell/grammar main'
alias gpts='git pull https://github.com/nushell/tree-sitter-nu main'
alias gptsn='git pull https://github.com/nushell/tree-sitter-nu main'

###                                           ###
#    nushell config location and manipulation   #
###                                           ###

alias appsup='cd /Users/ma/Library/Application\ Support'

### This is the nushell config if XDG_CONFIG_HOME is NOT set
alias nuconfigold='cd /Users/ma/Library/Application\ Support/nushell'
alias nuconfig='cd /Users/ma/.config/nushell'
alias nuconfigme='nutop; cd ..; cd nuconfig'

alias slconfig='cd /Users/ma/Library/Application\ Support/io.spaceandtime.schnapslatte'

#
# nutop is the latest nushell and engine-q code snapshot
#

alias nudir='cd ~/j/tmp17'

alias nutop16='cd ~/j/tmp16/nushell'
alias nutop='cd ~/j/tmp17/nushell'

alias nucore='cd ~/j/tmp17/nushell-core'

alias nubo='cd ~/j/tmp11/nushell.github.io'
alias nubook='cd ~/j/tmp17/nushell.github.io'
alias nubookme='cd ~/j/tmp17/nushell.github.io'
alias nubookrun='npm install; npm run dev'

alias nut='cd ~/j/tmp17/nutmp'
alias nutmp='cd ~/j/tmp17/nutmp'

alias nurun='~/j/tmp17/nushell/target/debug/nu'
alias nurel='~/j/tmp17/nushell/target/release/nu'
alias nurunyes='~/j/tmp17/nushell/target/debug/nu'

alias nuruno='~/j/tmp17/nushell/target/debug/nu --no-std-lib'
alias nurunno='~/j/tmp17/nushell/target/debug/nu --no-std-lib'
alias nun='nurun -n --no-std-lib'

alias nur='./target/debug/nu'
alias nurunn='./target/debug/nu'
alias nunn='nurunn -n --no-std-lib'
alias nuir='./target/debug/nu'

alias nurunoconfig='./target/debug/nu --config ~/config.nu --env-config ~/env.nu'

alias nu44='~/mia/nu44/nu'
alias nu59='~/mia/nu59/nu'
alias nu61='~/mia/nu61/nu'

alias nulegrun='nutopp; ./target/debug/nu --skip-plugins'
alias nulegruns='cd ~/j/tmp26/nutmp/scripts; ~/j/tmp26/nushell/target/debug/nu --skip-plugins'

alias nurunp='nutop; ./target/debug/nu'
alias nuruni='nurun --log-level info'
alias nurund='nurun --log-level debug'
alias nurunt='nurun --log-level trace'
alias nuruntlog='nurun -l trace 2> log.txt'

alias nurundate='nurunt -c date'
alias nurunls='nurunt -c ls'

### Changing to various nushell crates

alias nuansi='nutop; cd crates/nu-ansi-term/src'
alias nuc='nutop; cd crates'
alias nucr='nutop; cd crates/nu-crate/src'
alias nuco='cd ~/j/tmp17/nucode'
alias nucode='cd ~/j/tmp17/nucode'

alias nucli='nutop; cd crates/nu-cli/src'

alias nucom='nutop; cd crates/nu-command/src'
alias nucomc='nutop; cd crates/nu-command-core/src'
alias nucomex='nutop; cd crates/nu-cmd-extra/src'
alias nucomlang='nutop; cd crates/nu-cmd-lang/src'

alias ncl='cd ~/j/tmp17/nushell/crates/nu-cmd-lang'
alias nulang='nutop; cd crates/nu-cmd-lang/src'
alias nulangt='nutop; cd crates/nu-cmd-lang/tests/commands'

alias nucomft='nutop; cd crates/nu-command/src/formats/to'
alias nudf='nutop; cd crates/nu-cmd-dataframe/src/dataframe'
alias nudft='nutop; cd crates/nu-cmd-dataframe'
alias dfnu='nutop; cd crates/nu-command/src/dataframe'
alias nucomt='nutop; cd crates/nu-command'

alias tff='nutop; cd tests/fixtures/formats'

alias nucomp='nutop; cd crates/nu-completion/src'

alias nudata='nudir; cd nudata'
alias nud='nudir; cd nudata'

alias nuen='nutop; cd crates/nu-engine/src'
alias nueng='nutop; cd crates/nu-engine/src'
alias nuex='nutop; cd crates/nu-cmd-extra/src'
alias nup='nutop16; cd crates/nu-parser/src'
alias nupt='nutop16; cd crates/nu-parser'
alias nuptf='nutop16; cd crates/nu-parser/fuzz'
alias nupf='nutop16; cd crates/nu-parser/fuzz'
alias nupar='nutop16; cd crates/nu-parser/src'

alias devir='cd ~/j/tmp18/nushell'

alias wgo='cd ~/j/tmp17/nutmp/scripts/weather'

alias nupro='nutop; cd crates/nu-protocol/src'
alias nustd='nutop; cd crates/nu-std/std'
alias nuprom='cd ~/j/tmp17/nupro'
alias nuprome='cd ~/j/tmp17/nupro'
alias nudfr='nutop; cd crates/nu-command/src/dataframe'
alias nudfg='nutop; cd crates/nu-command/src/dataframe'
alias nts='nutop; cd crates/nu-test-support/src'
alias nutab='nutop; cd crates/nu-table/src'
alias nutable='nutop; cd crates/nu-table'

alias df4='cd ~/j/tmp16/w/nushell-df4'
alias df4p='cd ~/j/tmp16/w/nushell-df4/crates/nu-polars'
alias df5='cd ~/j/tmp16/ww/nushell-df5'
alias df5p='cd ~/j/tmp16/ww/nushell-df5/crates/nu-polars'

alias nuj='cd ~/j/tmp17/nushell/crates/nu-json/src'
alias nujson='cd ~/j/tmp17/nushell/crates/nu-json/src'

alias nutest='nutop; cd crates/nu-test-support/src'

# Plugins

alias nuplug='nutop; cd crates/nu-plugin/src'
alias nuplugin='nutop; cd crates/nu-plugin/src'
alias npq='nutop; cd crates/nu_plugin_query/src'

# Nushell Testing
#
alias ntalls='cargo test --workspace --features=stable'
alias ntallx='cargo test --workspace --features=extra'
#
#  Testing an individual nushell command
#   Type the command name after typing the alias
#   cargo test --package nu-cli --test main -- commands::<command_name_here>
alias ntcomall='cargo test --package nu-cli --test main -- commands::'
alias ntcom='cargo test --package nu-cli --test main -- '

# Nushell Scripts
alias nubug='nutop; cd ..; cd nubug'
alias nutmps='nutop; cd ..; cd nutmp/scripts'
alias nusc='nutop; cd ..; cd nuscratch'
alias nus='nutop; cd ..; cd nuscripts'
alias nuscript='nutop; cd ..; cd nuscripts'
alias nuscripts='nutop; cd ..; cd nuscripts'
alias nust='nutop; cd ..; cd nutmp/scripts/test'
alias nusn='nutop; cd ..; cd nu_scripts'

# Nushell Projects
alias nume='nutop; cd ..; cd nume'
alias nunotes='nutop; cd ..; cd nunotes'
alias nuproj='nutop; cd ..; cd nuproj'
alias peval='nuproj; cd parseval'

# Nushell directory locations
alias tojson='nutop; cd crates/nu-command/src/formats/to'

# Nushell Binaries
alias nuver='cd /mia/rust/nushell/nuver'

### mdbook

alias numd='nutop; cd ../numdbook'

alias mdb='mdbook build'
alias mdc='mdbook clean'
alias mdd='mdbook build -d ./docs'
alias mds='mdbook serve'
alias mdserve='mdbook serve'

#
# gluon
#
alias gli='gluon -i'

#
# zola
#

alias zs='zola serve'
alias zb='zola build'

#
# Rust Examples
#

alias rex='cd ~/j/tmp07/rust-examples'
alias rustex='cd ~/j/tmp07/rust-examples'

alias rexa='rex; cd arrow'
alias rexdf='rex; cd datafusion'
alias rexe='rex; cd error'
alias rexg='rex; cd gluesql'
alias rexn='rex; cd narrow'
alias rexp='rex; cd polars'
alias rexr='rex; cd redis'
alias rexs='rex; cd sqlite'
alias rext='rex; cd tempfile'
alias rexv='rex; cd vec'

#
# Special Case Nushell Testing
# You have to run the cta command first prior to running the tests
#

alias cta='cargo test --workspace'
alias ctazed='cargo nextest run --workspace --no-fail-fast'
alias ctalist='cargo nextest list --workspace'

alias cnrlistall='cargo nextest list --workspace --cargo-profile ci --all-features'
alias cnrlist='cargo nextest list'
alias cnl='cargo nextest list'
alias cnr='cargo nextest run'
alias cnra='cargo nextest run --all --all-features'
alias cnranf='cnra --no-fail-fast'
alias ctall='cnranf'
alias cnrb='cargo nextest run --all --features extra'
alias cnrn='cargo nextest run --no-capture'
alias cnrno='cargo nextest run --no-capture'

alias ct='cargo test --no-fail-fast'
alias ctt='ct --test'
alias ctlist='cargo test -- --list'
alias ctno='cargo test -- --nocapture'
alias ctexam='ct test_examples'

alias ctrl='cargo test --features rustyline-support'

alias cth='ct commands::help'
alias cthno='ctno commands::help'

alias ctnoex='ctno commands::tests::examples_work_as_expected'

alias ctaf='cargo test --workspace --all-features'
alias ctan='cargo test --workspace --all-features'
alias ctas='cargo test --workspace --features=stable'
alias ctm='cargo test --test main'
alias ct100='cargo test --package nu-cli --test main -- commands::each'

alias ctdf='ct --workspace --features=dataframe'
alias ctdff='ct --workspace --features=dataframe dataframe::'
alias cndf='cargo nextest run --all --features=dataframe'
alias cndff='cargo nextest run --all --features=dataframe dataframe::'

alias ctex='ct --workspace --features=extra'
alias ctexbits='ct --workspace --features=extra bits::'
alias ctexbytes='ct --workspace --features=extra bytes::'

#alias cnex='cargo nextest run --all --features=extra'
#alias cnexbits='cargo nextest run --all --features=extra bits::'

#
# Helix
#
alias hxg='cd ~/j/tmp17/helix'

#
# tickrs
#
alias tickui='tickrs -s ui,ibm,nly'

#
# cranelift wasmtime
#

export TARGET=x86_64-apple-darwin

alias cl='cd ~/j/tmp19/cranelift'
alias clg='cd ~/j/tmp19/cl'
alias clu='clif-util'
alias clur='~/j/tmp19/wasmtime/target/debug/clif-util'
alias clurt='clur test'
alias wabt='cd ~/j/tmp19/wabt'
alias wabtt='cd ~/j/tmp19/wabtest'
alias wabtest='cd ~/j/tmp19/wabtest'
alias rr='./test/run-tests.py -p --no-roundtrip'
alias wt=wasmtime
alias wtg='cd ~/j/tmp19/wasmtime'
alias wtc='cd ~/j/tmp19/wasmtime/cranelift'

##
#  Nom
##
alias nom='cd ~/j/tmp17/nom'
alias rexnom='cd ~/j/tmp17/rust-examples/nom'
alias rexnomex='cd ~/j/tmp17/rust-examples/nom/examples'
alias nomrex='cd ~/j/tmp17/rust-examples/nom'
alias nomrexex='cd ~/j/tmp17/rust-examples/nom/examples'

##
#  Tokio, Tonic
##
alias tonic='cd ~/j/tmp13/tonic'

##
# Sqlx
##
alias sqlxtodo='DATABASE_URL=postgres:///todos sqlx database create'
alias psqltodo='psql postgres:///todos'

##
#  Rust ripgrep (rg)
#
### https://github.com/BurntSushi/ripgrep/issues/193
##
alias rgpaf='rg "pub async fn"'
alias rgpf='rg "pub fn"'
alias rgtrait='rg "pub trait"'
alias rgstruct='rg "pub struct"'
alias rgenum='rg "pub enum"'

#
### rgf pb   // search for all files with the pattern pb in lets say bayard
#            // which both use protocol buffers

alias rgf='rg --files | rg'
alias rgp='rgf "\.parquet"'

alias rgct="rg 'cfg\(test\)'"
alias rgctest="rg 'cfg\(test\)'"
alias rgt="rg '\#\[test\]'"
alias rgtest="rg '\#\[test\]'"
alias rgtoktest="rg '\[tokio::test\]'"
alias mr="rg 'macro_rules! '"
alias rgnu="rg nu\!"

### Find all references to polars in all Cargo.toml files
alias rgc="rg polars -g Cargo.toml"

##
#   exa
##
alias tree="exa -T"

##
#   how to run tests when they live inside an example file
#   the key point here is that you have to put the name of the example file first before tests
##

alias ctflex='cargo test --example flight_sql_server tests --features="cli flight-sql-experimental tls"'

##
#   dply
##
alias dp1="dply -c 'parquet(\"region.parquet\") | show()'"

alias nnpt='cd ~/j/tmp17/nutmp/nnp'
alias nnpgo='cd ~/j/tmp16/new-nu-parser'
alias nnpme='cd ~/j/tmp16/nnp'
alias nnpjt='cd ~/j/tmp16/sophiajt-new-nu-parser'
alias gpnp='git pull https://github.com/nushell/new-nu-parser main'
alias gpnnp='git pull https://github.com/nushell/new-nu-parser main'

##
#   nu-git-manager
##
alias ngm='cd ~/j/tmp17/nu-git-manager'
alias ngmg='cd ~/j/tmp17/nu-git-manager'
alias gmg='cd ~/j/tmp17/nu-git-manager'
alias nupmg='cd ~/j/tmp17/nupm'
alias pmg='cd ~/j/tmp17/nupm'
alias gpm='cd ~/j/tmp17/nupm'

alias gpgm='git pull https://github.com/amtoine/nu-git-manager main'
alias gppm='git pull https://github.com/nushell/nupm main'

alias getzedpicker='git clone https://github.com/stormasm/zedpicker'
alias getgpuicom='git clone https://github.com/longbridge/gpui-component'
alias getgpuicomstorm='git clone git@github.com:stormasm/gpui-component.git'
alias getgpuicome='git clone git@github.com:stormasm/gpui-component.git'
alias gpgp='git pull https://github.com/longbridge/gpui-component main'

alias dock='cd ~/j/tmp15/gpuicom-dock'
alias dockdock='cd ~/j/tmp15/gpuicom-dock/crates/ui/src/dock'

alias gpuicome='cd ~/j/tmp07/gpui-component'
alias gpuicom='cd ~/j/tmp11/gpui-component'

alias gno='cd ~/j/tmp07/gpuicom-notes'
alias gnotes='cd ~/j/tmp07/gpuicom-notes'
alias gpuino='cd ~/j/tmp07/gpuicom-notes'
alias gpuicomno='cd ~/j/tmp07/gpuicom-notes'

alias gpuiui='gpuicome; cd crates/ui/src'
alias gpuidock='gpuicome; cd crates/ui/src/dock'
alias gpuistory='gpuicome; cd crates/story/src'
alias gpuist='gpuicome; cd crates/story/src'
alias gpuiex='gpuicome; cd crates/story/examples'

alias gpui25='cd ~/j/tmp07/gpuicom-2504'

##
#   If gleam sticks over the longer
#   term I will move these aliases
#   to a separate file
#
#   so for now leave them at the bottom of this file
##
alias glg='cd ~/j/tmp06'
alias glgo='glg; cd gleam'

alias pis='cd ~/j/tmp17/pipestream'

alias lgo='cd ~/j/tmp05/lox'
alias diary='cd ~/mm/diary'
alias diaryrun='cd ~/mm/diary; sws -z --directory-listing-order 0'
alias dirun='cd ~/mm/diary; sws -z --directory-listing-order 0'

##
#    Rust Compiler
##

alias getrust='gcfast git@github.com:rust-lang/rust.git'

##
#    Jupyter Repl
##
alias irust='cd ~/j/tmp08/irust'

##
#    Tmp09 Blitz & Dioxus & Taffy
##

alias be='cd ~/j/tmp09/bevy'
alias bl='cd ~/j/tmp09/blitz'
alias bli='cd ~/j/tmp09/blitz'
alias diox='cd ~/j/tmp09/dioxus'
alias fl='cd ~/j/tmp09/floem'
alias ice='cd ~/j/tmp05/iced'
alias iced='cd ~/j/tmp05/iced'
alias taf='cd ~/j/tmp09/taffy'
alias taffy='cd ~/j/tmp09/taffy'
alias uin='cd ~/j/tmp09/uinotes'
alias uino='cd ~/j/tmp09/uinotes'
alias uinotes='cd ~/j/tmp09/uinotes'
alias bevme='cd ~/j/tmp06/bevy'
alias bevyme='cd ~/j/tmp06/bevy'
alias bev='cd ~/j/tmp09/bevy'
alias bevy='cd ~/j/tmp09/bevy'
alias emugel='cd ~/j/tmp05/emulsion/subcrates/gelatin'
alias emugot='cd ~/j/tmp05/emulsion'
alias emugo='cd ~/j/tmp05/emulsion/src'
alias emu="emulsion"
alias emuc='cd /Users/ma/Library/Caches/Emulsion'
alias emucache='cd /Users/ma/Library/Caches/Emulsion'
alias emucfg='cd /Users/ma/Library/Application\ Support/Emulsion'
alias emuconfig='cd /Users/ma/Library/Application\ Support/Emulsion'
alias gligo='cd ~/j/tmp05/glium/src'
alias gligot='cd ~/j/tmp05/glium'
alias vsgo='cd ~/j/tmp05/viewskater/src'
alias vs="viewskater"

alias wi='cd ~/j/tmp09/winit'
alias wiold='cd ~/j/tmp05/winit'
alias win='cd ~/j/tmp09/winit'
alias winleg='cd ~/j/tmp05/winit'
alias winold='cd ~/j/tmp05/winit'
alias pix='cd ~/j/tmp05/pixels'
alias mini='cd ~/j/tmp05/rust_minifb'

alias gpbevy='git pull https://github.com/bevyengine/bevy main'
alias gpbl='git pull https://github.com/DioxusLabs/blitz main'
alias gpdiox='git pull https://github.com/DioxusLabs/dioxus main'
alias gpfl='git pull https://github.com/lapce/floem main'
alias gpfloem='git pull https://github.com/lapce/floem main'
alias gpglium='git pull https://github.com/glium/glium master'
alias gpice='git pull https://github.com/iced-rs/iced master'
alias gpiced='git pull https://github.com/iced-rs/iced master'
alias gptaf='git pull https://github.com/DioxusLabs/taffy main'
alias gptaffy='git pull https://github.com/DioxusLabs/taffy main'
alias gpwi='git pull https://github.com/rust-windowing/winit master'
alias gpwin='git pull https://github.com/rust-windowing/winit master'
alias gpixels='git pull https://github.com/parasyte/pixels main'
alias gppixels='git pull https://github.com/parasyte/pixels main'
alias gpminifb='git pull https://github.com/emoon/rust_minifb master'
alias gpvs='git pull https://github.com/ggand0/viewskater main'

##
#    Fish Shell
##
alias fish='~/j/tmp17/fish-shell/target/debug/fish'
alias eqfish='cd ~/j/tmp17/fish-shell'

##
#    egui
##
alias egui='cd ~/j/tmp28/egui'
alias muz='cd ~/j/tmp07/muzak'
alias muzak='cd ~/j/tmp07/muzak'
alias gpmuz='git pull https://github.com/143mailliw/muzak master'
alias gpmuzak='git pull https://github.com/143mailliw/muzak master'
alias diox='cd ~/j/tmp09/dioxus'

#
# Random
#
alias mex='cd ~/j/tmp99/mexico'
alias mexico='cd ~/j/tmp99/mexico'
alias logos='cd ~/j/tmp05/logos'

#
# https://github.com/stormasm/rust-notes/blob/main/static-web-server.md
#
alias sws='sws --port 3000'

alias numofiles='find /Users/ma/j/tmp33/nushell.github.io | wc -l'
alias nof='lsr | wc -l'

alias memg='cd ~/j/tmp07/memgame'
